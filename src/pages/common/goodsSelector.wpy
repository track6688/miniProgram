<style lang="less">

</style>
<template>
<view class="page__bd">
  <view class="weui-search-bar">
    <view class="weui-search-bar__form">
      <view class="weui-search-bar__box">
        <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
        <input type="text" class="weui-search-bar__input" placeholder="搜索" value="{{inputVal}}" focus="{{inputShowed}}" @input="inputTyping" />
        <view class="weui-icon-clear" wx:if="{{inputVal.length > 0}}" @tap="clearInput">
          <icon type="clear" size="14"></icon>
        </view>
      </view>
      <label class="weui-search-bar__label" hidden="{{inputShowed}}" @tap="showInput">
          <icon class="weui-icon-search" type="search" size="14"></icon>
          <view class="weui-search-bar__text">搜索</view>
      </label>
    </view>
    <view class="weui-search-bar__cancel-btn" hidden="{{!inputShowed}}" @tap="hideInput">取消</view>
  </view>
  <view class="weui-cells searchbar-result" wx:if="{{inputVal.length > 0}}">
    <repeat for="{{resultArray}}" key="index" index="index" item="item">
      <navigator url="" class="weui-cell" hover-class="weui-cell_active">
        <view class="weui-cell__bd">
          <view>{{item.name}}</view>
        </view>
      </navigator>
    </repeat>
  </view>
</view>
</template>

<script>
import wepy from 'wepy'
import {
  connect
} from 'wepy-redux'

@connect({
  num(state) {
    return state.counter.num
  },
  asyncNum(state) {
    return state.counter.asyncNum
  },
  sumNum(state) {
    return state.counter.num + state.counter.asyncNum
  }
})

export default class UserSelector extends wepy.page {
  config = {
    navigationBarTitleText: '选择商品'
  }
  components = {}

  data = {
    inputShowed: false,
    inputVal: '',
    resultArray: [{
      id: 123,
      name: 'Apple'
    }, {
      id: 124,
      name: 'Banana'
    }, {
      id: 125,
      name: 'Organge'
    }, {
      id: 126,
      name: 'BBB'
    }, {
      id: 127,
      name: 'Pike'
    }]
  }

  computed = {

  }

  methods = {
    showInput: function() {
      this.inputShowed = true
    },
    hideInput: function() {
      this.inputVal = ''
      this.inputShowed = false
    },
    clearInput: function() {
      this.inputVal = ''
    },
    inputTyping: function(e) {
      // console.log(e.detail.value)
      // 每次搜索框改变都会调用这个方法
      this.inputVal = e.detail.value
    }
  }

  events = {

  }

  onLoad() {

  }
}
</script>
